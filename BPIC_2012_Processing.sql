
--- RAW EVENTS
DROP TABLE IF EXISTS #TRACES_RAW

SELECT
	CASE_ID AS CASEID,
	[RESOURCE] AS 'RESOURCE',
	CASE 
		WHEN CONCEPT_NAME = 'A_SUBMITTED' THEN 'A_SUBMITTED'
		WHEN CONCEPT_NAME = 'A_PARTLYSUBMITTED' THEN 'A_PARTLYSUBMITTED'
		WHEN CONCEPT_NAME= 'A_PREACCEPTED' THEN 'A_PREACCEPTED'
		WHEN CONCEPT_NAME = 'A_ACCEPTED' THEN 'A_ACCEPTED'
		WHEN CONCEPT_NAME = 'A_FINALIZED' THEN 'A_FINALIZED'
		WHEN CONCEPT_NAME = 'O_SENT' THEN 'O_SENT'
		WHEN CONCEPT_NAME = 'O_SENT_BACK' THEN 'O_SENT_BACK'
		WHEN CONCEPT_NAME in ('A_APPROVED','A_ACTIVATED','A_REGISTERED') THEN 'A_APPROVED'
		WHEN CONCEPT_NAME = 'W_Nabellen offertes' THEN 'W_FOLLOWUP_OFFER'
		WHEN CONCEPT_NAME = 'W_Afhandelen leads' THEN 'W_COMPLETE_LEADS'
		WHEN CONCEPT_NAME = 'W_Completeren aanvraag' THEN 'W_COMPLETE_PREACCEPTED_APPLICATIONS'
		WHEN CONCEPT_NAME = 'W_Nabellen incomplete dossiers' THEN 'W_FOLLOWUP_MISSING_INFO'
		WHEN CONCEPT_NAME = 'W_Valideren aanvraag' THEN 'W_ASSESSING_APPLICATION'
		WHEN CONCEPT_NAME = 'W_Beoordelen fraude' THEN 'W_INVESTIGATING_FOR_FRAUD'
		WHEN CONCEPT_NAME = 'W_Wijzigen contractgegevens' THEN 'W_MODIFYING_EXISTING_CONTRACTS'
		WHEN CONCEPT_NAME in ('O_CANCELLED','O_DECLINED') THEN 'O_CANCELLED' -- THE PARTICULAR OFFER WAS CANCELLED
		WHEN CONCEPT_NAME in ('A_CANCELLED','A_DECLINED') THEN 'A_DECLINED'
		ELSE 'REDUNDANT' END AS MILESTONE,
	CASE 
		WHEN CONCEPT_NAME = 'A_SUBMITTED' THEN 0
		WHEN CONCEPT_NAME = 'A_PARTLYSUBMITTED' THEN 0
		WHEN CONCEPT_NAME= 'A_PREACCEPTED' THEN 1
		WHEN CONCEPT_NAME = 'A_ACCEPTED' THEN 1
		WHEN CONCEPT_NAME = 'A_FINALIZED' THEN 1
		WHEN CONCEPT_NAME = 'O_SENT' THEN 1
		WHEN CONCEPT_NAME = 'O_SENT_BACK' THEN 1
		WHEN CONCEPT_NAME in ('A_APPROVED','A_ACTIVATED','A_REGISTERED') THEN 3
		WHEN CONCEPT_NAME = 'W_Nabellen offertes' THEN 1
		WHEN CONCEPT_NAME = 'W_Afhandelen leads' THEN 1
		WHEN CONCEPT_NAME = 'W_Completeren aanvraag' THEN 1
		WHEN CONCEPT_NAME = 'W_Nabellen incomplete dossiers' THEN 1
		WHEN CONCEPT_NAME = 'W_Valideren aanvraag' THEN 1
		WHEN CONCEPT_NAME = 'W_Beoordelen fraude' THEN 1
		WHEN CONCEPT_NAME = 'W_Wijzigen contractgegevens' THEN 1
		WHEN CONCEPT_NAME in ('O_CANCELLED','O_DECLINED') THEN 2 -- THE PARTICULAR OFFER WAS CANCELLED
		WHEN CONCEPT_NAME in ('A_CANCELLED','A_DECLINED') THEN 3
		ELSE -1 END AS MILESTONE_ID,
	COMPLETE_TIMESTAMP,
	AMOUNT_REQ
	--ROW_NUMBER ( )   OVER ( PARTITION BY CASE_ID ORDER BY COMPLETE_TIMESTAMP,MILESTONE_ID ) AS ACTIVITY_INDEX_ALL
INTO #TRACES_RAW
FROM DATASETS.dbo.BPIC_2012
WHERE  LIFECYCLE_TRANSITION = 'COMPLETE'

-- OBTAIN THE END OUTCOME

DROP TABLE IF EXISTS #END_OUTCOMES

SELECT DISTINCT 
	CASEID, 
	MILESTONE AS END_OUTCOME
INTO #END_OUTCOMES
FROM #TRACES_RAW
WHERE MILESTONE IN ('A_APPROVED','A_DECLINED')

-- WITH ACTIVITY INDEX

DROP TABLE IF EXISTS #TRACES

SELECT
	*,
	ROW_NUMBER ( )   OVER ( PARTITION BY CASEID ORDER BY COMPLETE_TIMESTAMP,MILESTONE_ID ) AS ACTIVITY_INDEX_ALL
INTO #TRACES
FROM #TRACES_RAW
WHERE MILESTONE NOT IN ('A_APPROVED','A_DECLINED') --REMOVE THE OUTCOME LABEL FROM THE TRACE

---REMOVE THE REDUNDANT ACTIVITIES

DROP TABLE IF EXISTS #TRACES_REFINED

SELECT
	A.CASEID,
	A.RESOURCE,
	A.MILESTONE,
	A.MILESTONE_ID,
	A.COMPLETE_TIMESTAMP AS END_TIMESTAMP,
	ISNULL(B.COMPLETE_TIMESTAMP, A.COMPLETE_TIMESTAMP) AS START_TIMESTAMP,
	A.AMOUNT_REQ,
	ROW_NUMBER ( )   OVER ( PARTITION BY A.CASEID ORDER BY A.COMPLETE_TIMESTAMP,A.MILESTONE_ID  ) AS ACTIVITY_INDEX_RAW
INTO #TRACES_REFINED
FROM #TRACES A
	LEFT JOIN #TRACES B ON A.ACTIVITY_INDEX_ALL -1 = B.ACTIVITY_INDEX_ALL AND A.CASEID = B.CASEID
WHERE A.MILESTONE <> 'REDUNDANT'




--- REMOVE THE LOOPS

DROP TABLE IF EXISTS #TRACES_NO_LOOPS
SELECT 
	A.CASEID,
	A.RESOURCE,
	A.MILESTONE,
	A.START_TIMESTAMP,
	A.END_TIMESTAMP,
	B.MILESTONE AS 'NEXT_MS',
	B.START_TIMESTAMP AS 'NEXT_MS_START_TIMESTAMP',
	B.END_TIMESTAMP AS 'NEXT_MS_END_TIMESTAMP',
	A.AMOUNT_REQ,
	ROW_NUMBER ( )   OVER ( PARTITION BY A.CASEID ORDER BY A.START_TIMESTAMP,A.MILESTONE_ID ) AS ACTIVITY_INDEX
	INTO #TRACES_NO_LOOPS

FROM #TRACES_REFINED A
LEFT JOIN #TRACES_REFINED B ON A.ACTIVITY_INDEX_RAW = B.ACTIVITY_INDEX_RAW-1 AND A.CASEID = B.CASEID
--WHERE A.MILESTONE <> B.MILESTONE OR B.MILESTONE IS NULL


DROP TABLE IF EXISTS #MILESTONE_BASED_TRACES
SELECT 
A.CASEID,
A.MILESTONE,
A.RESOURCE,
ISNULL(B.NEXT_MS_START_TIMESTAMP,A.START_TIMESTAMP) AS START_TIMESTAMP,
A.END_TIMESTAMP AS END_TIMESTAMP,
A.ACTIVITY_INDEX,
A.AMOUNT_REQ
INTO #MILESTONE_BASED_TRACES
FROM #TRACES_NO_LOOPS A
LEFT JOIN #TRACES_NO_LOOPS B ON A.ACTIVITY_INDEX-1 = B.ACTIVITY_INDEX AND A.CASEID = B.CASEID



-- OBTAIN THE OUTCOMES
DROP TABLE IF EXISTS #TRACE_START_END

SELECT 
	CASEID,
	MIN(START_TIMESTAMP) AS TRACE_START_TIMESTAMP,
	MAX(ACTIVITY_INDEX) AS TRACE_END
INTO #TRACE_START_END
FROM #MILESTONE_BASED_TRACES
GROUP BY CASEID


---- FINAL SELECT
DROP TABLE IF EXISTS #FINAL_SELECT

SELECT 
A.CASEID,
A.MILESTONE,
A.RESOURCE,
DATEDIFF(MINUTE,A.START_TIMESTAMP,A.END_TIMESTAMP) TASK_DURATION,
DATEDIFF(MINUTE,C.TRACE_START_TIMESTAMP,A.START_TIMESTAMP) TIME_ELAPSED,
A.END_TIMESTAMP,
A.ACTIVITY_INDEX,
A.AMOUNT_REQ,
B.END_OUTCOME AS OUTCOME,
CASE WHEN A.ACTIVITY_INDEX = C.TRACE_END THEN 1 ELSE 0 END AS TRACE_END
INTO #FINAL_SELECT
FROM #MILESTONE_BASED_TRACES A
	JOIN #END_OUTCOMES B ON A.CASEID = B.CASEID
	JOIN #TRACE_START_END C ON A.CASEID = C.CASEID



SELECT *FROM #FINAL_SELECT A
ORDER BY A.CASEID, A.ACTIVITY_INDEX




